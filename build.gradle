plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'jacoco'
    id 'com.github.kt3k.coveralls' version '2.12.2'
}

group = 'net.simplyvanilla'
version = '0.1.3'

java {
    toolchain.languageVersion.set(JavaLanguageVersion.of(17))
}

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven { url = 'https://repo.fulminazzo.it/releases' }
}

dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'

    implementation 'it.fulminazzo:YAMLParser:1.5.14'

    compileOnly "com.velocitypowered:velocity-api:3.3.0-SNAPSHOT"
    annotationProcessor "com.velocitypowered:velocity-api:3.3.0-SNAPSHOT"
    testImplementation "com.velocitypowered:velocity-api:3.3.0-SNAPSHOT"

    testImplementation platform('org.junit:junit-bom:5.10.2')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.junit.jupiter:junit-jupiter-params'
}

test {
    useJUnitPlatform()
}

jacoco {
    toolVersion = '0.8.11' // specify the desired version
}

jacocoTestReport {
    reports {
        xml.required = true
    }
}

coveralls {
    jacocoReportPath 'build/reports/jacoco/test/jacocoTestReport.xml'
}

shadowJar {
    exclude("META-INF/**")
    dependencies {
        exclude(dependency('org.yaml:snakeyaml:2.2'))
    }
    relocate("it.fulminazzo.yamlparser", "it.fulminazzo.simplyperms")
    relocate("it.fulminazzo.fulmicollection", "it.fulminazzo.simplyperms")
    archiveFileName = "${project.name}-${project.version}.jar"
}

jar {
    enabled = false // Required for sub projects depending on sub projects
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    archiveFileName = "${project.name}-${project.version}-original.jar"
    dependsOn(shadowJar)
    manifest {
        attributes ("Manifest-Version": "${rootProject.version}")
    }
}

processResources {
    def props = [
            version: rootProject.version, group: rootProject.group,
            name: rootProject.name, name_lower: rootProject.name.toLowerCase()
    ]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('*.yml') {
        expand props
    }
}
